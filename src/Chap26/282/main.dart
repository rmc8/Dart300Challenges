/// Personクラスは個人の基本情報を管理します。
///
/// このクラスはゲッターとセッターを使用して、
/// データのカプセル化とバリデーションを実現しています。
class Person {
  /// 年齢を保持するプライベート変数です。
  ///
  /// クラス外からの直接アクセスを防ぐため、
  /// 変数名の前にアンダースコア(_)を付けてプライベートとして宣言しています。
  int _age = 0;

  /// 年齢を取得するゲッターです。
  ///
  /// 単純に_age変数の値を返します。
  int get age => _age;

  /// 年齢を設定するセッターです。
  ///
  /// 値の検証を行い、不正な値が設定されるのを防ぎます。
  ///
  /// [value] 設定する年齢の値
  set age(int value) {
    if (value >= 0 && value <= 120) {
      _age = value;
    } else {
      print('年齢は0から120の間で設定してください。');
    }
  }

  /// 成人かどうかを判断する計算されたプロパティです。
  ///
  /// 年齢が18歳以上の場合にtrueを返します。
  bool get isAdult => _age >= 18;
}

void main() {
  // Personクラスの使用例
  Person person = Person();

  // セッターを使用して年齢を設定
  person.age = 20;
  print(person.age); // ゲッターを使用して年齢を取得

  // 不正な値を設定しようとした場合
  person.age = 256;
  print(person.age); // 20が出力されます（変更されていない）

  // 計算されたプロパティの使用例
  print(person.isAdult); // true
}
